"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generateSettings = generateSettings;
exports.generateConfig = generateConfig;

var _fs = _interopRequireDefault(require("fs"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function buildTableInfo() {
  return {
    name: '',
    pk: '',
    columns: [],
    visible: true
  };
}

function buildColumnInfo() {
  return {
    name: '',
    verbose: '',
    type: '',
    allowNull: true,
    visible: {
      main: true,
      detail: true
    },
    editable: true
  };
}

function generateSettings(DBData) {
  var resultData = [];
  DBData.forEach(function (tableData) {
    var table = buildTableInfo();
    var schema = tableData.schema;
    var describe = tableData.describe;
    table.name = schema[0].TABLE_NAME;
    describe.forEach(function (column) {
      var columnData = buildColumnInfo();
      columnData.name = column.Field;
      columnData.verbose = column.Field;
      columnData.type = column.Type;
      columnData.allowNull = column.Null === 'NO' ? false : true;

      if (column.Key === 'PRI') {
        table.pk = column.Field;
      }

      tableData.schema.forEach(function (schemaData) {
        if (schemaData.COLUMN_NAME === column.Field) {
          columnData.relation = {
            type: 'oneToMany',
            table: schemaData.REFERENCED_TABLE_NAME || '',
            key: schemaData.REFERENCED_COLUMN_NAME || '',
            display: [schemaData.REFERENCED_COLUMN_NAME || '']
          };
        }
      });
      table.columns.push(columnData);
    });
    resultData.push(table);
  });

  _fs.default.writeFile('settings.json', JSON.stringify(resultData, null, 2), 'utf8', function (err) {
    if (err) {
      console.log('err', err);
    }
  });
}

function generateConfig(answers) {
  var _finalConfig;

  var finalConfig = (_finalConfig = {}, _defineProperty(_finalConfig, answers.DBType, {
    host: answers.DBHost,
    database: answers.DBName,
    user: answers.DBUser,
    password: answers.DBPassword
  }), _defineProperty(_finalConfig, "server", {
    port: 3004
  }), _finalConfig);

  _fs.default.writeFile('config.json', JSON.stringify(finalConfig, null, 2), 'utf8', function (err) {
    if (err) {
      console.log('err', err);
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jb25maWdHZW5lcmF0b3IudHMiXSwibmFtZXMiOlsiYnVpbGRUYWJsZUluZm8iLCJuYW1lIiwicGsiLCJjb2x1bW5zIiwidmlzaWJsZSIsImJ1aWxkQ29sdW1uSW5mbyIsInZlcmJvc2UiLCJ0eXBlIiwiYWxsb3dOdWxsIiwibWFpbiIsImRldGFpbCIsImVkaXRhYmxlIiwiZ2VuZXJhdGVTZXR0aW5ncyIsIkRCRGF0YSIsInJlc3VsdERhdGEiLCJmb3JFYWNoIiwidGFibGVEYXRhIiwidGFibGUiLCJzY2hlbWEiLCJkZXNjcmliZSIsIlRBQkxFX05BTUUiLCJjb2x1bW4iLCJjb2x1bW5EYXRhIiwiRmllbGQiLCJUeXBlIiwiTnVsbCIsIktleSIsInNjaGVtYURhdGEiLCJDT0xVTU5fTkFNRSIsInJlbGF0aW9uIiwiUkVGRVJFTkNFRF9UQUJMRV9OQU1FIiwia2V5IiwiUkVGRVJFTkNFRF9DT0xVTU5fTkFNRSIsImRpc3BsYXkiLCJwdXNoIiwiZnMiLCJ3cml0ZUZpbGUiLCJKU09OIiwic3RyaW5naWZ5IiwiZXJyIiwiY29uc29sZSIsImxvZyIsImdlbmVyYXRlQ29uZmlnIiwiYW5zd2VycyIsImZpbmFsQ29uZmlnIiwiREJUeXBlIiwiaG9zdCIsIkRCSG9zdCIsImRhdGFiYXNlIiwiREJOYW1lIiwidXNlciIsIkRCVXNlciIsInBhc3N3b3JkIiwiREJQYXNzd29yZCIsInBvcnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBRUE7Ozs7OztBQTJCQSxTQUFTQSxjQUFULEdBQXNDO0FBQ3BDLFNBQU87QUFDTEMsSUFBQUEsSUFBSSxFQUFFLEVBREQ7QUFFTEMsSUFBQUEsRUFBRSxFQUFFLEVBRkM7QUFHTEMsSUFBQUEsT0FBTyxFQUFFLEVBSEo7QUFJTEMsSUFBQUEsT0FBTyxFQUFFO0FBSkosR0FBUDtBQU1EOztBQUVELFNBQVNDLGVBQVQsR0FBd0M7QUFDdEMsU0FBTztBQUNMSixJQUFBQSxJQUFJLEVBQUUsRUFERDtBQUVMSyxJQUFBQSxPQUFP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SUFBQUEsSUFBSSxFQUFFUCxPQUFPLENBQUNRLE1BSEE7QUFJZEMsSUFBQUEsUUFBUSxFQUFFVCxPQUFPLENBQUNVO0FBSkosR0FESCwyQ0FPUDtBQUNKQyxJQUFBQSxJQUFJLEVBQUU7QUFERixHQVBPLGdCQUFqQjs7QUFXQW5CLGNBQUdDLFNBQUgsQ0FBYSxhQUFiLEVBQTRCQyxJQUFJLENBQUNDLFNBQUwsQ0FBZU0sV0FBZixFQUE0QixJQUE1QixFQUFrQyxDQUFsQyxDQUE1QixFQUFrRSxNQUFsRSxFQUEwRSxVQUFDTCxHQUFELEVBQVM7QUFDakYsUUFBSUEsR0FBSixFQUFTO0FBQ1BDLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLEtBQVosRUFBbUJGLEdBQW5CO0FBQ0Q7QUFDRixHQUpEO0FBS0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZXNjcmliZUluZm8sIHNjaGVtYUluZm8gfSBmcm9tICdAcm9vdC9kZXNjcmliZVRhYmxlJ1xuaW1wb3J0IHsgSVR5cGVBbnN3ZXJzIH0gZnJvbSAnQHJvb3QvaW5kZXgnXG5pbXBvcnQgZnMgZnJvbSAnZnMnXG5cbmludGVyZmFjZSBJVGFibGVJbmZvIHtcbiAgbmFtZTogc3RyaW5nLFxuICBwazogc3RyaW5nLFxuICBjb2x1bW5zOiBJQ29sdW1uSW5mb1tdLFxuICB2aXNpYmxlOiBib29sZWFuXG59XG5cbmludGVyZmFjZSBJQ29sdW1uSW5mbyB7XG4gIG5hbWU6IHN0cmluZyxcbiAgdmVyYm9zZTogc3RyaW5nLFxuICB0eXBlOiBzdHJpbmcsXG4gIGFsbG93TnVsbDogYm9vbGVhbixcbiAgdmlzaWJsZToge1xuICAgIG1haW46IGJvb2xlYW4sXG4gICAgZGV0YWlsOiBib29sZWFuXG4gIH0sXG4gIGVkaXRhYmxlOiBib29sZWFuLFxuICByZWxhdGlvbj86IHtcbiAgICB0eXBlOiBzdHJpbmcsXG4gICAgdGFibGU6IHN0cmluZyxcbiAgICBrZXk6IHN0cmluZyxcbiAgICBkaXNwbGF5OiBzdHJpbmdbXVxuICB9XG59XG5cbmZ1bmN0aW9uIGJ1aWxkVGFibGVJbmZvKCk6IElUYWJsZUluZm8ge1xuICByZXR1cm4ge1xuICAgIG5hbWU6ICcnLFxuICAgIHBrOiAnJyxcbiAgICBjb2x1bW5zOiBbXSxcbiAgICB2aXNpYmxlOiB0cnVlLFxuICB9XG59XG5cbmZ1bmN0aW9uIGJ1aWxkQ29sdW1uSW5mbygpOiBJQ29sdW1uSW5mbyB7XG4gIHJldHVybiB7XG4gICAgbmFtZTogJycsXG4gICAgdmVyYm9zZTogJycsXG4gICAgdHlwZTogJycsXG4gICAgYWxsb3dOdWxsOiB0cnVlLFxuICAgIHZpc2libGU6IHtcbiAgICAgIG1haW46IHRydWUsXG4gICAgICBkZXRhaWw6IHRydWUsXG4gICAgfSxcbiAgICBlZGl0YWJsZTogdHJ1ZSxcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVTZXR0aW5ncyhEQkRhdGE6IEFycmF5PHtzY2hlbWE6IHNjaGVtYUluZm8sIGRlc2NyaWJlOiBkZXNjcmliZUluZm99Pik6IGFueSB7XG4gIGNvbnN0IHJlc3VsdERhdGE6IGFueVtdID0gW11cbiAgREJEYXRhLmZvckVhY2goXG4gICAgKHRhYmxlRGF0YSkgPT4ge1xuICAgICAgY29uc3QgdGFibGUgPSBidWlsZFRhYmxlSW5mbygpXG4gICAgICBjb25zdCBzY2hlbWEgPSB0YWJsZURhdGEuc2NoZW1hXG4gICAgICBjb25zdCBkZXNjcmliZSA9IHRhYmxlRGF0YS5kZXNjcmliZVxuXG4gICAgICB0YWJsZS5uYW1lID0gc2NoZW1hWzBdLlRBQkxFX05BTUVcbiAgICAgIGRlc2NyaWJlLmZvckVhY2goXG4gICAgICAgIChjb2x1bW4pID0+IHtcbiAgICAgICAgICBjb25zdCBjb2x1bW5EYXRhID0gYnVpbGRDb2x1bW5JbmZvKClcbiAgICAgICAgICBjb2x1bW5EYXRhLm5hbWUgPSBjb2x1bW4uRmllbGRcbiAgICAgICAgICBjb2x1bW5EYXRhLnZlcmJvc2UgPSBjb2x1bW4uRmllbGRcbiAgICAgICAgICBjb2x1bW5EYXRhLnR5cGUgPSBjb2x1bW4uVHlwZVxuICAgICAgICAgIGNvbHVtbkRhdGEuYWxsb3dOdWxsID0gY29sdW1uLk51bGwgPT09ICdOTycgPyBmYWxzZSA6IHRydWVcblxuICAgICAgICAgIGlmIChjb2x1bW4uS2V5ID09PSAnUFJJJykge1xuICAgICAgICAgICAgdGFibGUucGsgPSBjb2x1bW4uRmllbGRcbiAgICAgICAgICB9XG4gICAgICAgICAgdGFibGVEYXRhLnNjaGVtYS5mb3JFYWNoKFxuICAgICAgICAgICAgKHNjaGVtYURhdGEpID0+IHtcbiAgICAgICAgICAgICAgaWYgKHNjaGVtYURhdGEuQ09MVU1OX05BTUUgPT09IGNvbHVtbi5GaWVsZCkge1xuICAgICAgICAgICAgICAgIGNvbHVtbkRhdGEucmVsYXRpb24gPSB7XG4gICAgICAgICAgICAgICAgICB0eXBlOiAnb25lVG9NYW55JyxcbiAgICAgICAgICAgICAgICAgIHRhYmxlOiBzY2hlbWFEYXRhLlJFRkVSRU5DRURfVEFCTEVfTkFNRSB8fCAnJyxcbiAgICAgICAgICAgICAgICAgIGtleTogc2NoZW1hRGF0YS5SRUZFUkVOQ0VEX0NPTFVNTl9OQU1FIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgZGlzcGxheTogW1xuICAgICAgICAgICAgICAgICAgICBzY2hlbWFEYXRhLlJFRkVSRU5DRURfQ09MVU1OX05BTUUgfHwgJycsXG4gICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIClcblxuICAgICAgICAgIHRhYmxlLmNvbHVtbnMucHVzaChjb2x1bW5EYXRhKVxuICAgICAgICB9XG4gICAgICApXG4gICAgICByZXN1bHREYXRhLnB1c2godGFibGUpXG4gICAgfVxuICApXG4gIGZzLndyaXRlRmlsZSgnc2V0dGluZ3MuanNvbicsIEpTT04uc3RyaW5naWZ5KHJlc3VsdERhdGEsIG51bGwsIDIpLCAndXRmOCcsIChlcnIpID0+IHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICBjb25zb2xlLmxvZygnZXJyJywgZXJyKVxuICAgIH1cbiAgfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlQ29uZmlnKGFuc3dlcnM6IElUeXBlQW5zd2Vycykge1xuICBjb25zdCBmaW5hbENvbmZpZyA9IHtcbiAgICBbYW5zd2Vycy5EQlR5cGVdOiB7XG4gICAgICAgIGhvc3Q6IGFuc3dlcnMuREJIb3N0LFxuICAgICAgICBkYXRhYmFzZTogYW5zd2Vycy5EQk5hbWUsXG4gICAgICAgIHVzZXI6IGFuc3dlcnMuREJVc2VyLFxuICAgICAgICBwYXNzd29yZDogYW5zd2Vycy5EQlBhc3N3b3JkLFxuICAgIH0sXG4gICAgc2VydmVyOiB7XG4gICAgICAgIHBvcnQ6IDMwMDQsXG4gICAgfSxcbiAgfVxuICBmcy53cml0ZUZpbGUoJ2NvbmZpZy5qc29uJywgSlNPTi5zdHJpbmdpZnkoZmluYWxDb25maWcsIG51bGwsIDIpLCAndXRmOCcsIChlcnIpID0+IHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICBjb25zb2xlLmxvZygnZXJyJywgZXJyKVxuICAgIH1cbiAgfSlcbn1cbiJdfQ==