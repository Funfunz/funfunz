{
  "name": "@funfunz/core",
  "version": "0.23.1",
  "description": "backoffice generator",
  "exports": {
    "./lib/index.js": "./lib/index.js"
  },
  "type": "module",
  "engines": {
    "node": ">=16.0.0"
  },
  "bin": {
    "funfunz": "./lib/generator/index.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/JWebCoder/funfunz.git"
  },
  "keywords": [
    "backoffice",
    "generator"
  ],
  "author": "Jo√£o Moura",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/JWebCoder/funfunz/issues"
  },
  "homepage": "https://github.com/JWebCoder/funfunz#readme",
  "devDependencies": {
    "@babel/core": "^7.19.3",
    "@babel/preset-env": "^7.19.4",
    "@babel/preset-typescript": "^7.18.6",
    "@funfunz/sql-data-connector": "^0.10.0",
    "@types/debug": "^4.1.5",
    "@types/express": "^4.17.8",
    "@types/mongodb": "^3.5.27",
    "@types/morgan": "^1.9.1",
    "@types/node": "^20.4.1",
    "@types/pluralize": "0.0.29",
    "@types/supertest": "^2.0.12",
    "@typescript-eslint/eslint-plugin": "^4.4.0",
    "@typescript-eslint/parser": "^4.4.0",
    "codecov": "^3.8.0",
    "cors": "^2.8.5",
    "docsify-cli": "^4.4.4",
    "eslint": "^7.10.0",
    "mysql2": "^2.2.5",
    "supertest": "^6.3.3",
    "ts-node": "^9.0.0",
    "tsx": "^3.12.7",
    "typescript": "^4.0.5"
  },
  "dependencies": {
    "axios": "^1.4.0",
    "enquirer": "^2.3.6",
    "express": "^4.18.2",
    "graphql": "^16.6.0",
    "graphql-http": "^1.21.0",
    "graphql-parse-resolve-info": "^4.13.0",
    "graphql-type-json": "^0.3.2",
    "graphql-upload": "^16.0.2",
    "jsonschema": "^1.2.8",
    "minimist": "^1.2.5",
    "morgan": "^1.10.0",
    "pluralize": "^8.0.0"
  },
  "scripts": {
    "docs": "docsify serve ./docs",
    "execute:test": "DEBUG=Joan-* node --loader tsx  ./src/test/api.test.executable.ts",
    "test": "DEBUG=Joan-* node --loader tsx --trace-warnings --test ./src/**/*.test.ts",
    "lint": "eslint src",
    "questions": "DEBUG=funfunz:* NODE_ENV=development ts-node ./src/generator/index.ts",
    "clean": "rm -rf lib && mkdir lib",
    "build": "npm run lint && npm run clean && npm run build:js",
    "build:js": "tsc --project tsconfig.build.json",
    "prepublishOnly": "npm run build",
    "docker-compose:up": "docker compose up -d",
    "docker-compose:down": "docker compose down --remove-orphans",
    "mysql:shell": "docker compose exec mysqldb bash -c 'mysql -u root -p$MYSQL_ROOT_PASSWORD $MYSQL_DATABASE'"
  }
}
